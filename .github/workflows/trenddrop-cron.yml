name: trenddrop-cron

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  schedule:
    - cron: "0 * * * *"   # hourly; tweak as you like

permissions:
  contents: write   # needed to commit products.json

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      # ==== REQUIRED SECRETS (Settings → Secrets and variables → Actions) ====
      EBAY_CLIENT_ID:         ${{ secrets.EBAY_CLIENT_ID }}
      EBAY_CLIENT_SECRET:     ${{ secrets.EBAY_CLIENT_SECRET }}
      # If your code still references APP_ID, expose it too (harmless if unused)
      EBAY_APP_ID:            ${{ secrets.EBAY_APP_ID }}
      EPN_CAMPAIGN_ID:        ${{ secrets.EPN_CAMPAIGN_ID }}
      SUPABASE_URL:           ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY:      ${{ secrets.SUPABASE_ANON_KEY }}
      OPENAI_API_KEY:         ${{ secrets.OPENAI_API_KEY }}
      # Optional:
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      TELEGRAM_BOT_TOKEN:        ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:          ${{ secrets.TELEGRAM_CHAT_ID }}

      # ==== OPTIONAL REPO VARIABLES (Settings → Secrets and variables → Variables) ====
      TREND_TOPICS_LIMIT:     ${{ vars.TREND_TOPICS_LIMIT }}
      TREND_PER_PAGE:         ${{ vars.TREND_PER_PAGE }}
      TREND_SLEEP_SECS:       ${{ vars.TREND_SLEEP_SECS }}
      TREND_SLEEP_JITTER:     ${{ vars.TREND_SLEEP_JITTER }}
      TREND_PICKS_LIMIT:      ${{ vars.TREND_PICKS_LIMIT }}
      TREND_TELEGRAM_LIMIT:   ${{ vars.TREND_TELEGRAM_LIMIT }}
      EBAY_CACHE_TTL_MIN:     ${{ vars.EBAY_CACHE_TTL_MIN }}
      EBAY_CACHE_BYPASS:      ${{ vars.EBAY_CACHE_BYPASS }}
      DEBUG_EBAY:             ${{ vars.DEBUG_EBAY }}

      # Ensure module imports work for `python -m bots.trenddrop`
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Run bot (same entrypoint as local)
        run: python -m bots.trenddrop

      - name: Commit updated storefront data (if any)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/data/products.json
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update products.json [skip ci]"
            git push
          fi
